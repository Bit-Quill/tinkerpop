////
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
////
image::apache-tinkerpop-logo.png[width=500,link="https://tinkerpop.apache.org"]

*x.y.z - Proposal 5*

Proposal for adding support for HTTP transactions.

=== Introduction
Currently there is a discrepancy in capabilities when using HTTP and WebSockets connections to Gremlin Server.
One of the biggest differences is missing transaction support for HTTP.
This proposal is intended to introduce tx protocol and implementation for HTTP connection.


=== Motivation
* Establish parity in capabilities between HTTP and WebSockets connections in terms of transaction support.
* Simplify migration to HTTP.


=== Assumptions
* Users should be able to use transaction in a similar way regardless of connection type.
* Thread local tx implementation can be reused.
* Avoid breaking changes for transaction usage in GLV's if possible.


=== Specifications
==== Design Overview
We already have an implementation of transactions for WebSockets, and it can be reused.
The specific implementation will largely depend on the changes to HttpGremlinEndpointHandler and related code. The specific implementation will largely depend on the changes to HttpGremlinEndpointHandler and related code. Technically SessionOpProcessor and Context can be extended to handle HTTP requests, but it's require major changes to HttpGremlinEndpointHandler.

==== Protocol
Transaction start is implicit, when `X-Transaction-Id` header present then the request refers to a transaction.
Transaction is closed when received `g.tx().commit()` Gremlin string.

===== Error Handling
On any error, including transaction conflict:
1. Rollback.
2. Return HTTP response 500 with exception details.
